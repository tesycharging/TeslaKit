name: Test all  platforms

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: 0 6 * * *

jobs:
  build:
    name: test on  latest macos with xcode 14.3.1
    runs-on: macos-latest 
    strategy:
      fail-fast: false
      matrix:
        xcode: ['14.3.1']
        macos: ['macos-latest']
        scheme: ['TeslaKit']
        command: ['test']
        platform: ['iOS', 'mac-catalyst']
        exclude:
          - macos: 'macos-latest'
            xcode: '14.3.1'
    steps:
    - name: Switch xcode to 14.3.1
      uses: actions/checkout@v3
      with:
        xcode-version: '14.3.1'
    - name: Double-check macOS version macos-latest
      run: sw_vers
    - name: Code Checkout
      uses: actions/checkout@v3
    - name: Check xcodebuild version
      run: xcodebuild -version
    - name: Check xcode embedded SDKs
      run: xcodebuild -showsdks
    - name: Show buildable schemes
      run: xcodebuild -list
    - name: Set Default Scheme
        run: |
          default='TeslaKit'
          echo $default | cat >default
          echo Using default scheme: $default

    - name: build
        env:
          scheme: 'TeslaKit'
          platform: ${{ 'iOS Simulator' }}
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          scheme='TeslaKit'
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
      

    - name: Show eligible build destinations for TeslaKit
      run: xcodebuild -showdestinations -scheme 'TeslaKit' 
    - uses: mxcl/xcodebuild@v1.9.2
      with:
        platform: 'iOS'
        scheme: 'TeslaKit'
        action: 'test'
        code-coverage: true
        verbosity: xcpretty
        upload-logs: always
